QUESTION 1
この質問については、JencoMart のケーススタディを参照してください。
JencoMart のセキュリティチームは、すべてのGoogle Cloud Platform インフラストラクチャが運用リソースと開発リソースの分離した最小限の権限モデルを使ってデプロイされていることを望んでいます。
どのGoogle ドメインとプロジェクト構造をするべきでしょうか？

A. ユーザーを管理するために開発/テスト/ステージング用と本番用の2つのG Suiteアカウントを作成します。各アカウントにはアプリケーションごとに1つのプロジェクトを含める必要があります。
B. ユーザーを管理するために2つのG Suiteアカウントを作成します。1つはすべての開発アプリケーション用の単一プロジェクト、もう1つはすべての本番アプリケーション用の単一プロジェクトです。
C. 1つのG Suiteアカウントを作成して、独自のプロジェクトの各アプリケーションの各段階でユーザーを管理します。
D. 単一のG Suiteアカウントを作成して、開発/テスト/ステージング環境用の1つのプロジェクトと本番環境用の1つのプロジェクトでユーザーを管理します。

Explanation:
最小限の権限と職務分離の原則は意味的には異なりますが、セキュリティの観点から本質的に関連する概念です。両方の背後にある意図は、人々が実際に必要とするよりも高い特権レベルを持つことを防ぐことです。

最小権限の原則：ユーザーは、ジョブの実行に必要な最小限の権限のみを保持し、それ以上は保持しないでください。これにより、認可されていないターゲット、ジョブ、監視テンプレートなどのリソースへのアクセスが制限され、認可の活用が減少します。
職務の分離：ユーザー権限レベルを制限するだけでなく、ユーザーの職務、またはユーザーが実行できる特定のジョブも制限します。ユーザーには、複数の関連機能に対する責任を与えないでください。これにより、ユーザーが悪意のある操作を実行し、その操作を隠蔽する能力が制限されます。
Reference:
– 職掌分散

QUESTION 2
この質問については、JencoMart のケーススタディを参照してください。
JencoMart がユーザ認証情報データベースをGoogle Cloud Platform に移行して古いサーバをシャットダウンした数日後、新しいデータベースサーバはSSH 接続に応答しなくなりました。アプリケーション サーバーへのデータベース要求は正しく処理しています。
問題を診断するには、次のどの手順を実行する必要がありますか？（回答は3つ）


A. 仮想マシン（VM）とディスクを削除して、新しいVMを作成します。
B. インスタンスを削除し、ディスクを新しいVMに接続して調査します。
C. ディスクのスナップショットを取得し、新しいマシンに接続して調査します。
D. マシンが接続されているネットワークの受信ファイア ウォールルールを確認します。
E. 非常に単純なファイアウォールルールを使用してVMを別のネットワークに接続し、調査します。
F. トラブルシューティング用にインスタンスのシリアルコンソール出力を印刷し、インタラクティブコンソールをアクティブにして調査します。

Explanation:
D：Handling「ポート22に接続できません」エラーメッセージは考えられる原因は次のとおりです。

ポートでSSH アクセスを許可するファイアウォール規則はありません。ポート22でのSSHアクセスは、すべてのGoogle Compute Engine インスタンスでデフォルトで有効になっています。アクセスを無効にした場合、ブラウザからのSSHは機能しません。22以外のポートでsshdを実行する場合は、カスタムファイアウォール規則でそのポートへのアクセスを有効にする必要があります。
SSH アクセスを許可するファイアウォール規則は有効になっていますが、GCP コンソールサービスからの接続を許可するように設定されていません。ブラウザーベースのSSHセッションのソースIPアドレスは、GCP コンソールによって動的に割り当てられ、セッションごとに異なる場合があります。
F：「接続できませんでした。再試行しています…」エラーの処理
シリアルコンソールの出力ページに移動して、accounts-from-metadata で始まる出力行を探すことで、デーモンが実行されていることを確認できます。
string：標準イメージを使用しているが、シリアルコンソール出力にこれらの出力プレフィックスが表示されない場合は、デーモンが停止している可能性があります。 インスタンスを再起動して、デーモンを再起動します。


Reference:
– ブラウザからの SSH

QUESTION 3
この質問については、JencoMart のケーススタディを参照してください。JencoMartは、ユーザー プロファイル ストレージをGoogle Cloud Datastore に、アプリケーションサーバーをGoogle Compute Engine（GCE）に移行することを決定しました。
移行中に既存のインフラストラクチャはデータをアップロードするためにGoogle Cloud Datastore にアクセスする必要があります。
どのサービス アカウント キーの管理戦略を推奨する必要がありますか？

A. オンプレミス インフラストラクチャとGCE 仮想マシン（VM）のサービス アカウント キーをプロビジョニングします。
B. ユーザーアカウントを使用してオンプレミス インフラストラクチャを認証し、VMのサービス アカウント キーをプロビジョニングします。
C. オンプレミス インフラストラクチャのサービス アカウント キーをプロビジョニングし、VMにGoogle Cloud Platform（GCP）管理鍵を使用します。
D. GCE / Googleにカスタム認証サービスを展開します。 オンプレミスインフラストラクチャ用のGoogle Kubernetes Engine（GKE）およびVM用のGCP 管理キーを使用します。

Explanation:
Google Cloud Platform へのデータの移行
他のクラウド プロバイダで発生するデータ処理があり、処理したデータをGoogle Cloud Platform に転送するとします。 外部クラウド上の仮想マシンのサービス アカウントを使用して、データをGoogle Cloud Platform にプッシュすることができます。これを行うにはサービス アカウントを作成するときにサービス アカウント キーを作成してダウンロードし、外部プロセスからそのキーを使用してGoogle Cloud Platform API を呼び出す必要があります。

Reference:
– サービス アカウントについて

QUESTION 4
この質問については、JencoMart のケーススタディを参照してください。JencoMartは、アジアへのトラフィックを提供するGoogle Cloud Platform 上にアプリケーションのバージョンを構築しました。
JencoMartのビジネスと技術的な目標に対する成功を測定したいと考えています。
どの指標を追跡する必要がありますか？

A. アジアからのリクエストのエラー率。
B. 米国とアジアの待ち時間の違い。
C. アジアからの総訪問数、エラー率、および待ち時間。
D. アジアのユーザーの合計訪問数と平均待ち時間。
E. データベースに存在する文字セットの数。

Explanation:
シナリオから：
ビジネス要件：アジア市場にサービスを展開する。
技術的要件：アジア地区からサービスにアクセスする際のレイテンシを短縮する。

QUESTION 5
この質問については、JencoMart のケーススタディを参照してください。


JencoMartのアプリケーションのGoogle Cloud Platform（GCP）への移行の進行が遅れています。インフラストラクチャを上図です。
スループットを最大化したいと望んでいます。
潜在的なボトルネックは何でしょうか？（回答は3つ）

A. スループットを制限する単一のVPNトンネル。
B. このタスクに適さないGoogle Cloud Storage の階層。
C. 長距離での操作に適さないコピーコマンド。
D. オンプレミス マシンよりもGCPの仮想マシン（VM）が少ない。
E. VMの外部の独立したストレージレイヤー。このタスクには適していません。
F. オンプレミス インフラストラクチャとGCP 間の複雑なインターネット接続。

QUESTION 6
この質問については、JencoMart のケーススタディを参照してください。JencoMartは、ユーザープロファイル データベースをGoogle Cloud Platformに移動したいと考えています。
どのGoogle データベースを使用する必要がありますか？

A. Google Cloud Spanner
B. Google BigQuery
C. Google Cloud SQL
D. Google Cloud Datastore

Common workloads:
– ユーザープロファイル
– プロダクトカタログ
– ゲームデータ

Reference:
– クラウド ストレージ プロダクト
– Cloud Datastore の概要

QUESTION 7
この質問については、Mountkirk Games のケーススタディを参照してください。
Mountkirk Gamesは、新しいテスト戦略を設計を望んでいます。
テストカバレッジは他のプラットフォームの既存バックエンドとどのように違うべきでしょうか ?

A. テストは従来のアプローチをはるかに超えて拡張する必要があります。
B. 単体テストは必要はなく、エンドツーエンドのテストだけが必要です。
C. リリースが実稼働環境になった後にテストを適用する必要があります。
D. テストにはGoogle Cloud Platform のインフラストラクチャのを直接テストを含める必要があります。

Explanation:
シナリオから：
Mountkirk Gamesのいくつかのゲームは予想を上回る人気を博したため、世界中のオーディエンス、アプリケーション サーバー、MySQL データベース、分析ツールのスケーリングに関する問題が生じた。
ゲーム分析プラットフォームの要件：ゲーム アクティビティに基づいて動的にスケールアップまたはスケールダウンする

QUESTION 8
この質問については、Mountkirk Games のケーススタディを参照してください。
Mountkirk Gamesは、新しいバックエンドをGoogle Cloud Platform（GCP）にデプロイしました。
バックエンドの新しいバージョンが公開される前に、それらのバックエンドの完全なテストプロセスを作成し、テスト環境を経済的な方法で拡張する必要があります。
プロセスをどのように設計するべきでしょか？

A. 本番環境の負荷をシミュレートするために、GCPでスケーラブルな環境を作成します。
B.既存のインフラストラクチャを使用して、GCP ベースのバックエンドを大規模にテストします。
C. GCP内部のリソースを使用してアプリケーションの各コンポーネントにストレステストを構築し、負荷をシミュレートします。
D. GCP で一連の静的環境を作成し、高/中/低 などのさまざまなレベルの負荷をテストします。

Explanation:
シナリオから：ゲームバックエンドプラットフォームの要件

ゲーム アクティビティに基づいて動的にスケールアップまたはスケールダウンする。
マネージド NoSQL データベースと統合する。
強化されたLinux ディストリビューション を実行する。

QUESTION 9
この質問については、Mountkirk Games のケーススタディを参照してください。
Mountkirk Gamesは、継続的デリバリーパイプラインの確率を望んでいます。
そのアーキテクチャには、迅速に更新およびロールバックできるように考えている小規模サービスが含まれています。
Mountkirk Gamesには次の要件があります。

サービスは、米国とヨーロッパの複数のリージョンに重複して導入されています。
フロントエンドサービスのみが公開インターネットで公開されます。
サービス群に単一のフロントエンド IPを提供できます。
デプロイメントの成果物は不変です。
どのプロダクトを使用するべきですか？

A. Google Cloud Storage、Google Cloud Dataflow、Google Compute Engine.
B. Google Cloud Storage、Google App Engine、Google Network Load Balancer.
C. Google Kubernetes Registry、Google Container Engine、Google HTTP(S) Load Balancer.
D. Google Cloud Functions、Google Cloud Pub/Sub、Google Cloud Deployment Manager.

QUESTION 10
この質問については、Mountkirk Games のケーススタディを参照してください。
Mountkirk Gamesのゲームサーバーは、自動的に適切にスケーリングされません。
先月、新機能を発表しから非常に人気になりました。記録的なユーザー数がサービスを使用しようとしていますが、多くは503 エラーと受け取り、応答時間が非常に遅くなっています。
最初に何を調査するべきでしょうか？

A. データベースがオンラインであることを確認します。
B. プロジェクトの割り当てを超えていないことを確認します。
C. 新しい機能コードでパフォーマンスのバグが発生しなかったことを確認します。
D. 負荷テストチームが本番環境に対してツールを実行していないことを確認します。

Explanation:
503 はサービス利用不可エラーです。データベースがオンラインの場合は、すべてのユーザーに503 エラーが表示されます。

QUESTION 11
この質問については、Mountkirk Games のケーススタディを参照してください。
Mountkirk Gamesは、分離されたアプリケーション環境を展開するために、再現可能で構成可能なメカニズムを作成する必要があります。
開発者とテスターはお互いの環境とリソースにアクセスできますが、ステージングまたは本番環境のリソースにはアクセスできません。ステージング環境は、本番環境から一部のサービスにアクセスする必要があります。
開発環境をステージングおよび本番環境から分離するにはどうすればよいですか？

A. 開発とテスト用のプロジェクトと、ステージングと本番用のプロジェクトを作成します。
B. 開発とテスト用のネットワークと、ステージングと本番用のネットワークを作成します。
C. 開発用に1つのサブネットワークを作成し、ステージングと本番用に別のサブネットワークを作成します。
D. 開発用に1つ、ステージング用に2つ目、本番用に3つ目のプロジェクトを作成します。

QUESTION 12
この質問については、Mountkirk Games のケーススタディを参照してください。
Mountkirk Gamesは、新しいゲーム用にリアルタイムの分析プラットフォームをセットアップしたいと考えています。
新しいプラットフォームは、技術的要件を満たす必要があります。
すべての要件を満たすGoogle プロダクトの組み合わせはどれです？

A. Google Kubernetes Engine、Google Cloud Pub/Sub、Google Cloud SQL.
B. Google Cloud Dataflow、Google Cloud Storage、Google Cloud Pub/Sub、Google BigQuery.
C. Google Cloud SQL、Google Cloud Storage、Google Cloud Pub/Sub、Google Cloud Dataflow.
D. Google Cloud Dataproc、Google Cloud Pub/Sub、Google Cloud SQL、Google Cloud Dataflow.
E. Google Cloud Pub/Sub、Google Compute Engine、Google Cloud Storage、Google Cloud Dataproc.

Explanation:
Google 独自の高速プライベートネットワークを活用したGoogle Cloud Pub/Sub を使用して、世界中のどこからでも毎秒数百万のストリーミングイベントを取り込みます。Google Cloud Dataflow でストリームを処理して、信頼性が高く、一度だけ、低遅延のデータ変換を保証します。変換されたデータをクラウドネイティブのデータウェアハウジングサービスであるGoogle BigQuery にストリーミングして、SQL または一般的な視覚化ツールを使用して即座に分析します。

シナリオから：ゲームのバックエンドをGoogle Compute Engine にデプロイしようと計画しています。これにより、ストリーミング指標の取得や集中的な分析が可能になります。

ゲーム分析プラットフォームの要件：

ゲーム アクティビティに基づいて動的にスケールアップまたはスケールダウン。
着信データをゲームサーバーから迅速に直接処理。
低速なモバイル ネットワークが原因で遅延したデータを処理。
10 TB 以上の履歴データに対してクエリを実行。
ユーザーのモバイル デバイスから定期的にアップロードされるファイルを処理。
完全に管理されたサービスのみを使用。
Reference:
– ストリーム分析とリアルタイムの分析情報

QUESTION 13 ★
この質問については、Mountkirk Games のケーススタディを参照してください。
Mountkirk Gamesは、現在の分析および統計レポートモデルから、Google Cloud Platform 上の技術的要件を満たすモデルに移行したいと考えています。
移行計画に含めるべき2つのステップはどれでしょうか？(回答は2つ)

A. 現在のバッチ ETL コードをCloud Cloud Dataflow に移行した場合の影響を評価します。
B. Google BigQuery のパフォーマンスを向上させるために、データを非正規化するスキーマ移行計画を作成します。
C. 単一のMySQL データベースからMySQL クラスタに移動する方法を示すアーキテクチャ図を作成します。
D. 前のゲームから10 TBの分析データをGoogle Cloud SQL インスタンスにロードし、データセット全体に対してテストクエリを実行して、正常に完了したことを確認します。
E. Google Cloud Armor を統合して、Google Cloud Storage にアップロードされた分析ファイル内のSQL インジェクション攻撃の可能性を防ぎます。

QUESTION 14 ★
この質問については、Mountkirk Games のケーススタディを参照してください。
会社のMountkirk Gamesのコンピューティングワークロードの技術アーキテクチャを分析および定義する必要があります。
Mountkirk Gamesのビジネス要件と技術的要件を考慮して、何をすべきですか？

A. ネットワーク ロードバランサを作成します。 Google Compute Engine プリエンプティブル インスタンスを使用します。
B. ネットワーク ロードバランサを作成します。Google Compute Engine インスタンスを使用します。
C. マネージド インスタンス グループ（MIG）と自動スケーリングポリシーを使用してネットワーク ロードバランサを作成します。Googel Compute Engine プリエンプティブル インスタンスを使用します。
D. マネージド インスタンス グループ（MIG）と自動スケーリングポリシーを使用してネットワーク ロードバランサを作成します。 Google Compute Engine インスタンスを使用します。

QUESTION 15
この質問については、Mountkirk Games のケーススタディを参照してください。
Mountkirk Gamesは、パブリック クラウドと技術の改善が利用可能になったときにそれを活用するために、将来のためのソリューションを設計したいと考えています。
どのステップを取るべきですか？(回答は2つ)

A. 将来のユーザー行動を予測するための機械学習モデルを訓練するために利用できるように、現在可能な限り多くの分析データとゲームアクティビティデータを保存します。
B. ゲームバックエンド アーティファクトをコンテナイメージにパッケージ化し、Google Kubernetes Engine 上で実行することでゲームアクティビティに応じてスケールアップやスケールダウンできる可用性を改善します。
C. Jenkins とSpinnaker を使って CI/CD パイプラインのセットアップを行い、カナリアの展開を自動化し、開発速度を改善します。
D. 追加のプレーヤーデータをデータベースに保存する必要がある新しいゲーム機能を追加する際のダウンタイムを短縮するために、スキーマのバージョン管理ツールを採用します。
E. Linux 仮想マシンに週単位のローリング メンテナンス プロセスを実装して、重要なカーネルパッチとパッケージアップデートを適用し、ゼロデイの脆弱性のリスクを軽減します。

QUESTION 16
この質問については、Mountkirk Games のケーススタディを参照してください。
Mountkirk Gamesは、モバイルネットワークの遅延の変化に対する分析プラットフォームの復元力をテストする方法を設計したいと考えています。
どうすればいいですか？

A. ゲーム分析プラットフォームに障害注入ソフトウェアを導入し、モバイルクライアントの分析トラフィックに遅延を追加できます。
B. Google Compute Engine 仮想マシンの携帯電話エミュレーターから実行できるテストクライアントを構築し、世界中のGoogle Cloud Platform リージョンで複数のコピーを実行して、現実的なトラフィックを生成します。
C. モバイルデバイスからアップロードされた分析ファイルの処理を開始する前に、ランダムな遅延を導入する機能を追加します。
D. プレーヤーのモバイルデバイスで実行し、世界中のGoogle Cloud Platform リージョンで実行されている分析エンドポイントから応答時間を収集するゲームのオプトインベータ版を作成します。

QUESTION 17
この質問については、Mountkirk Games のケーススタディを参照してください。
Mountkirk Games のデータベース ワークロードの技術アーキテクチャーを分析および定義する必要があります。
ビジネス要件と技術的要件を考慮してください。
どうすればいいですか？

A.時系列データにはGoogle Cloud SQL を使用し、履歴データクエリにはGoogle Cloud Bigtable を使用します。
B. Google Cloud SQL を使用してMySQLを置き換え、Google Cloud Spanner を使用して履歴データクエリを実行します。
C. Google Cloud Bigtable を使用してMySQLを置き換え、Google BigQuery を履歴データクエリに使用します。
D.時系列データにGoogle Cloud Bigtable を使用し、トランザクションデータにGoogle Cloud Spanner を使用し、履歴データクエリにGoogle BigQuery を使用します。

QUESTION 18 ★
この質問については、Mountkirk Games のケーススタディを参照してください。
時系列データベースサービスにゲームアクティビティを保存するためのMountkirk の技術的要件を満たすGoogle Cloud ストレージ プロダクトはどれでしょうか？

A. Google Cloud Bigtable
B. Google Cloud Spanner
C. Google BigQuery
D. Google Cloud Datastore

QUESTION 19 ★
この質問については、Mountkirk Games のケーススタディを参照してください。
新しいゲームバックエンド プラットフォームのアーキテクチャを担当しています。
ゲームはREST API を介してバックエンドと通信します。
Google のベストプラクティスに従います。
バックエンドをどのように設計すべきか？

A. バックエンドのインスタンス テンプレートを作成します。 すべてのリージョンについて、複数ゾーンのマネージド インスタンス グループ（MIG）にデプロイします。 L4 ロードバランサ（TCP プロキシ負荷分散）を使用します。
B. バックエンドのインスタンス テンプレートを作成します。 リージョンごとに、単一ゾーンのマネージド インスタンス グループ（MIG）にデプロイします。 L4 ロードバランサ（TCP プロキシ負荷分散）を使用します。
C. バックエンドのインスタンス テンプレートを作成します。 すべてのリージョンについて、複数ゾーンのマネージド インスタンス グループ（MIG）にデプロイします。L7 ロードバランサ（HTTP(S) 負荷分散）を使用します。
D. バックエンドのインスタンス テンプレートを作成します。 リージョンごとに、単一ゾーンのマネージド インスタンス グループ（MIG）にデプロイします。 L7 ロードバランサ（HTTP(S) 負荷分散）を使用します。

Reference:
– インスタンス テンプレート
– TCP プロキシ負荷分散のコンセプト
– あなたもすぐに試したくなる！世界最強の GCP ロードバランサを簡単に設定

QUESTION 20
この質問については、TerramEarth のケーススタディを参照してください。
TerramEarthのCTOは、接続された車両の生データを使用して、現場の車がいつ壊滅的な故障を起こすかをおおよそ特定したいと考えています。
そのために、ビジネス アナリストが車両データを一元的に照会できるようにする必要があります。
どのアーキテクチャをおすすめしますか？

A.
B.
C.
D.

Explanation:

プッシュ エンド ポイントはロードバランサにすることができます。
コンテナ クラスタを使用できます。
Stream Analytics用のGoogle Cloud Pub/Sub。


Reference:
– Google Cloud Pub/Sub
– Google Cloud IoT
– Cloud IoT Core での Connected Vehicle Platform の設計
– データの取り込み (opens in a new tab)”>Cloud IoT Core での Connected Vehicle Platform の設計>データの取り込み
– Google Touts Value of Cloud IoT Core for Analyzing Connected Car Data

QUESTION 21
この質問については、TerramEarth のケーススタディを参照してください。
TerramEarthの開発チームは、ビジネス要件を満たすAPIを作成したいと考えています。
開発チームには、カスタム フレームワークを作成するのではなく、ビジネス バリューに開発作業を集中させる必要があります。
どの方法を良いでしょうか？

A. Google App Engine をGoogle Cloud Endpoints で使用します。ディーラーおよびパートナー向けのAPIに注力します。
B. JAX-RS Jersey Java ベースのフレームワークでGoogle App Engine を使用します。一般向けのAPIに注力します。
C. Swagger（Open API 仕様）フレームワークでGoogle App Engineを使用します。一般向けのAPIに注力します。
D. Django Python コンテナでGoogle Container Engine を使用します。 一般向けのAPIに注力します。
E. Swagger（Open API 仕様）フレームワークを備えたTomcat コンテナでGoogle Container Engine を使用します。 ディーラーおよびパートナー向けのAPIに注力します。

Explanation:
Google Cloud Endpoints は、APIの開発、デプロイ、保護、監視を行なえます。また、Open API 仕様やGoogle API フレームワークを使って、API 開発のあらゆる段階で必要なツールを提供しています。
シナリオ:ビジネス要件
・車両の計画外停止時間を 1 週間未満に短縮する。
・自社製品の使われ方に関してさらに多くのデータをディーラー網に提供し、新しい製品やサービスをより適切に提案できるようにする。
・急成長を続ける農業ビジネスでの種子供給業者や肥料供給業者を中心にさまざまな企業と提携し、魅力的な製品やサービスを共同で顧客に提供できるようになる。

Reference:
– Google Cloud Endpoints
– App Engine スタンダード環境用 Endpoints スタートガイド

QUESTION 22
この質問については、TerramEarth のケーススタディを参照してください。
開発チームは、車両データを取得するための構造化APIを作成しました。
開発チームは、この車両イベントデータを使用するディーラー用のツールをサードパーティが開発できるようにしたいと考えています。
このデータに対する委任された承認をサポートする必要があります。
どうすればいいでしょうか？

A. OAuth と互換のあるアクセス制御システムを構築または活用します。
B. SAML 2.0 SSO 互換性を認証システムに組み込みます。
C. パートナーシステムのソース IP アドレスに基づいてデータアクセスを制限します。
D. 信頼できるサードパーティに提供できる各ディーラーの二次認証情報を作成します。

Explanation:
OAuth 2.0 を使用してアプリケーションの承認を委任します。
Google Cloud Platform API は、OAuth 2.0 をサポートしており、スコープはサポートされているメソッドに対してきめ細かな承認を提供します。Google Cloud Platform は、サービス アカウントとユーザーアカウント OAuth（3本足OAuthとも呼ばれる）の両方をサポートしています。

Reference:
– エンタープライズ企業のベスト プラクティス
– 認証の概要
– リクエストの承認
– Using OAuth 2.0 to Access Google APIs
– OAuth 2.0 の設定

QUESTION 23
この質問については、TerramEarth のケーススタディを参照してください。
TerramEarthは、現場にある2,000万台すべての車両をパブリック クラウドに接続することを計画しています。
これにより、2,000万600 バイトレコード/秒で40 TB/時のボリューム増加が予想されています。
データの取り込みをどのように設計する必要がありますか？

A.車両は、Google Cloud Storage にデータを直接書き込みます。
B.車両は、Google Cloud Pub/Sub にデータを直接書き込みます。。
C.車両は、データをGoogle BigQuery に直接ストリーミングします。
D.車両は、引き続き既存のシステム（FTP）を使用してデータを書き込みます。

QUESTION 24
この質問については、TerramEarth のケーススタディを参照してください。
TerramEarthのビジネス要件を分析したところ、ダウンタイムを削減し、顧客の部品の待ち時間を短縮することで、時間の大半を節約できることがわかりました。
3週間分の集約レポート時間の短縮に重点を置くことを決定しました。
会社のプロセスにどの変更するべきでしょうか？

A. CSV形式からバイナリ形式に移行、FTPからSFTP トランスポートに移行を行い、メトリックの機械学習分析を開発します。
B. FTPからストリーミング トランスポートへの移行、CSVからバイナリ形式への移行して、およびメトリックの機械学習分析を開発します。
C. フリートのセルラー接続を80％に増やし、FTPからストリーミング トランスポートに移行し、メトリックの機械学習分析を開発します。
D. FTPからSFTPトランスポートに移行し、メトリックの機械学習分析を開発し、ディーラーのローカル在庫を一定の要因で増やします。

Explanation:
圧縮データをロードする場合は、Avro バイナリ形式をお勧めします。Avro データは、データブロックが圧縮されている場合でもデータを並行して読み取ることができるため、読み込みが高速化できます。
Google Cloud Storage は、HTTP チャンク転送エンコードに基づいて、gsutil ツールまたはboto ライブラリを使用したストリーミング転送をサポートしています。ストリーミングデータを使用すると、データを最初に別のファイルに保存する必要なく、Google Cloud Storageアカウントとの間でデータをストリーミングできます。ストリーミング転送は、データを生成するプロセスがあり、アップロードする前にローカルにバッファリングする必要がない場合やパイプラインからGoogle Cloud Storage に直接結果を送信する場合に便利です。

Reference:
– ストリーミング転送
– データの読み込みの概要
– チャンク転送エンコード

QUESTION 25
この質問については、TerramEarth のケーススタディを参照してください。
Google Cloud Platform の利用を続ける結果、TerramEarthの設備投資（または資産計上）のどれが大きく変化するでしょうか？

A. 運用コスト/設備投資の割り当て、LANの変更、容量計画。
B. キャパシティプランニング、TCO計算、運用コスト/設備投資の割り当て。
C. キャパシティプランニング、使用率測定、データセンターの拡張。
D. データセンターの拡張、TCO計算、使用率測定。

QUESTION 26
この質問については、TerramEarth のケーススタディを参照してください。
データ取得を高速化するために、より多くの車両がセルラー接続にアップグレードされ、ETLプロセスにデータを送信できるようになります。
現在のFTP プロセスは頻繁にエラーを起こしやすく、接続に失敗するとファイルの初めからデータ転送を再開します。
ソリューションの信頼性を向上させ、セルラー接続でのデータ転送時間を最小限に抑える必要があります
どうすれば良いでしょうか？

A.FTP サーバのGoogle Container Engine クラスタを1つ使用します。データを複数地域バケットに保存し、バケット内のデータを使用してETL プロセスの実行します。
B. 異なる地域にあるFTP サーバを実行する複数のGoogle Container Engine クラスタを使用します。データを米国、EUおよびアジアの複数地域バケットに保存し、バケット内のデータを使用してETL プロセスを実行します。
C. HTTP（S）上でGoogle API を使用して、米国、EU、アジア内のさまざまなGoogle Cloud Multi-Regional Storage バケット ロケーションにファイルを直接転送します。バケット内のデータを使用してETL プロセスを実行します。
D. HTTP（S）上でGoogle API を使用して、米国、EU、アジア内の別のGoogle Cloud Regional Storage バケット ロケーションにファイルを直接転送します。ETL プロセスを実行して、各地域バケットからデータを取得します。

QUESTION 27
この質問については、TerramEarth のケーススタディを参照してください。
TerramEarthの2,000万台の車は世界中に散らばっています。
車両の位置に基づいて、テレメトリデータはGoogle Cloud Storage（GCS）のリージョンバケット（米国、欧州、アジア）に保存されています。
CTOは、なぜ車が100キロ走行した後に故障しているのかを判断するために、生のテレメトリデータに関するレポートの作成を望んでいます。
このジョブをすべてのデータに対して実行します。
このジョブを実行するための最も費用対効果の高い方法はどれでしょうか？

A. すべてのデータを1つのゾーンに移動し、Google Cloud Dataproc クラスタを起動してジョブを実行します。
B. すべてのデータを1つのリージョンに移動してから、Google Cloud Dataproc クラスタを起動してジョブを実行します。
C. 各地域でクラスタを起動して未処理データを前処理および圧縮し、データを複数地域のバケットに移動し、Google Cloud Dataproc クラスタを使用してジョブを終了します。
D. 各リージョンでクラスタを起動して生データを前処理および圧縮し、データをリージョンバケットに移動し、Google Cloud Dataproc クラスタを使用してジョブを仕上げます。

QUESTION 28
この質問については、TerramEarth のケーススタディを参照してください。
TerramEarthは、接続されているすべてのトラックにサーバとセンサーを搭載し、遠隔測定データを収集しています。
来年にこのデータを使用して機械学習モデルをトレーニングしたいと考えています。 またコストを削減しながら、このデータをパブリック クラウドに保存したいとも考えています。
何をすれば良いでしょうか？

A. トラックのコンピューターに1時間ごとのスナップショットでデータを圧縮させ、Google Cloud Nearline Storage バケットに保存します。
B. 遠隔測定データを、データを圧縮するストリーミングデータ フロージョブにリアルタイムでプッシュし、Google BigQuery に保存します。
C. データを圧縮するストリーミングデータ フロージョブにリアルタイムで遠隔測定データをプッシュし、Google Cloud Bigtable に保存します。
D. トラックのコンピューターに1時間ごとのスナップショットでデータを圧縮させ、Google Cloud Coldline Storage バケットに保存します。

Explanation:
Coldline Storage は、年に 1 回程度しかアクセスしないデータに最適な選択肢です。可用性が若干低く、最小保存期間は 90 日です。データ アーカイブ、オンライン バックアップ、障害復旧のための非常に低コストで、耐久性に優れたストレージ サービスです。
＜例＞
・Google Cloud Coldline Storage：法律や規制上の理由で保存されたデータなど、アクセス頻度の低いデータは、Coldline Storage として低コストで保存でき、必要なときに利用できます。
・災害復旧：災害復旧が発生した場合は復旧時間が重要です。Google Cloud Storageは、Coldline Storageとして保存されたデータへの低レイテンシなアクセスを提供しています。

Reference:
–ストレージ クラス

QUESTION 29
この質問については、TerramEarth のケーススタディを参照してください。
農業部門は完全自動運転車の実験をしています。
車両の運用中に強力なセキュリティを強化するためのアーキテクチャが必要です。
どのアーキテクチャを検討する必要がありますか？(回答は2つ)

A. 車両上のモジュール間のすべてのマイクロサービスコールを信頼できないものとして扱います。
B. 安全なアドレス空間を確保するために、接続にIPv6 が必要です。
C.トラステッドプラットフォームモジュール（TPM）を使用し、起動時にファームウェアとバイナリを確認します。
D. 関数型プログラミング言語を使用して、コード実行サイクルを分離します。
E. 冗長性のために複数の接続サブシステムを使用します。
F. チップを分離するために、車両の駆動電子機器をファラデーケージに入れます。

QUESTION 30
この質問については、TerramEarth のケーススタディを参照してください。
TerramEarthの各車両は、環境条件に応じて油圧などの運転パラメータを調整して効率を向上させることができます。
主な目標は、携帯電話と未接続の2,000万台すべての車両の現場での作業効率を向上させることです。
この目標を達成するには何をすれば良いでしょうか？

A. データのパターンを検査し、動作調整を自動的に行うルールを使用してアルゴリズムを作成します。
B. すべての動作データをキャプチャし、理想的な動作を特定する機械学習モデルをトレーニングし、ローカルで実行して自動的に動作調整を行います。
C. スライディング ウィンドウでGoogle Cloud Dataflow ストリーミング ジョブを実装し、Google Cloud Messaging（GCM）を使用して運用上の調整を自動的に行います。
D. すべての操作データをキャプチャし、理想的な操作を識別する機械学習モデルをトレーニングし、Google Cloud Machine Learning（ML）プラットフォームでホストして、操作を自動的に調整します。

QUESTION 31
この質問については、TerramEarth のケーススタディを参照してください。
欧州連合の一般データ保護規則（GDPR）に準拠するために、TerramEarthは、個人データが含まれる36か月後にヨーロッパの顧客から生成されたデータを削除する必要があります。
新しいアーキテクチャでは、このデータはGoogle Cloud Storage とGoogle BigQuery の両方に保存されます。
何をするべきでしょうか？

A. 欧州連合 データ用のGoogle BigQuery テーブルを作成し、テーブルの保存期間を36ヶ月に設定します。 Google Cloud Storageの場合、gsutil を使用して、36ヶ月のage 条件でDelete アクションを使用するライフサイクル管理を有効にします。
B. 欧州連合 データ用のGoogle BigQuery テーブルを作成し、テーブルの保存期間を36ヶ月に設定します。Googel Cloud Storageの場合、36ヶ月のage 条件の場合、gsutil を使用してSetStorageClass to NONE アクションを作成します。
C. 欧州連合 データ用のGoogle BigQuery タイムパーティション テーブルを作成し、パーティションの有効期限を36ヶ月に設定します。Google Cloud Storage の場合、gsutil を使用して、36ヶ月のage 条件でDelete アクションを使用するライフサイクル管理を有効にします。
D. 欧州連合 データ用のGoogle BigQuery タイムパーティションテーブルを作成し、パーティション期間を36ヶ月に設定します。 Google Cloud Storageの場合、gsutilを使用して、36ヶ月のage 条件でSetStorageClass to NONE アクションを作成します。

QUESTION 32
この質問については、TerramEarth のケーススタディを参照してください。
TerramEarthは、データファイルをGoogle Cloud Storage（GCS）に保存することを決定しました。
GCS のライフサイクル ルールを設定して、1年間のデータを保存しますが、ファイルス トレージのコストを最小限に抑える必要があります。
どうすればいいでしょうか？

A.「 Age：30、Storage Class：Standard、アクション：Coldline に設定」でGCS のライフサイクル ルールを作成し、Age 条件で2つ目のGCS ライフサイクル ルールを作成します。
Age：365、Storage Class：Coldline、アクション：Delete
B. 「 Age：30、Storage Class：Cloudline、アクション：Nearline に設定」でGCS のライフサイクル ルールを作成し、Age 条件で2つ目のGCS ライフサイクル ルールを作成します。
Age：91、Storage Class：Cloudline、アクション：Nearline に設定
C. 「 Age：90、Storage Class：Standard、アクション：Nearline に設定」でGCS のライフサイクル ルールを作成し、Age 条件で2つ目のGCS ライフサイクル ルールを作成します。
Age：91、Storage Class：Nearline、アクション：Coldline に設定
D.「 Age：30、Storage Class：Standard、アクション：Coldline に設定」でGCS のライフサイクル ルールを作成し、Age 条件で2つ目のGCS ライフサイクル ルールを作成します。
Age：365、Storage Class：Nearline、アクション：Delete

QUESTION 33 ★
この質問については、TerramEarth のケーススタディを参照してください。
TerramEarthのデータ ウェアハウスに、信頼性と拡張性に優れたGCP ソリューションを実装する必要があります。
TerramEarthのビジネス要件と技術的要件を考慮してください。
何をするべきでしょうか？

A. 既存のデータ ウェアハウスをGoogle BigQueryに置き換え、パーティション分割テーブルを使用します。
B. 既存のデータ ウェアハウスを96個のvCPUを持つGoogle Compute Engine インスタンスに置き換えます。
C. 既存のデータ ウェアハウスをGoogle BigQuery に置き換え、外部データソース（フェデレーション データソース）を使用します。
D. 既存のデータ ウェアハウスを96個のvCPUのGoogle Compute Engine インスタンスに置き換え、 32個のvCPUのGoogle Compute Engine プリエンプティブル インスタンスを追加します。

QUESTION 34 ★
この質問については、TerramEarth のケーススタディを参照してください。
すべての入力データをGoogle BigQuery に書き込む新しいアーキテクチャが導入されました。
データが汚れていることに気付き、コストを管理しながら、毎日自動化されたデータ品質を確保したいと考えています。
何をするべきでしょうか？

A. Google Cloud Dataflow ストリーミング ジョブを設定し、取り込みプロセスでデータを受信します。 Google Cloud Dataflow パイプラインのデータをクリーンアップします。
B. Google BigQuery からデータを読み取り、クリーンアップするGoogle Cloud Functions を作成します。Google Compute EngineインスタンスからGoogle Cloud Functions をトリガーします。
C. Google BigQuery のデータにSQL文を作成し、ビューとして保存します。 ビューを毎日実行し、結果を新しいテーブルに保存します。
D. Google Cloud Dataprep を使用して、Google BigQuery テーブルをソースとして構成します。 データを消去するために毎日のジョブをスケジュールします。

QUESTION 35 ★
この質問については、TerramEarth のケーススタディを参照してください。
TerramEarthの技術的要件を考慮した場合、Google Cloud Platform で予想外の車両のダウンタイムをどのように削減するべきですか?

A. Google BigQuery をデータ ウェアハウスとして使用します。 すべての車両をネットワークに接続し、Google Cloud Pub/Sub とGoogle Cloud Dataflow を使用してデータをGoogle BigQuery にストリーミングします。分析とレポートにGoogle データポータル（データスタジオ） を使用します。
B. Google BigQuery をデータ ウェアハウスとして使用します。すべての車両をネットワークに接続し、gcloud を使用してgzip ファイルをGoogle Cloud Multi-Regional Storage バケットにアップロードします。 分析とレポートにGoogle データポータルを使用します。
C. Google Cloud Dataproc Hive をデータ ウェアハウスとして使用します。gzip ファイルをGoogle Cloud Multi-Regional Storage バケットにアップロードします。gcloud を使用して、このデータをGoogle BigQuery にアップロードします。分析とレポートにGoogle データポータルを使用します。
D. Google Cloud Dataproc Hive をデータウェアハウスとして使用します。パーティション化されたHive テーブルにデータを直接ストリーミングします。Pig スクリプトを使用してデータを分析します。

QUESTION 36 ★
この質問については、TerramEarth のケーススタディを参照してください。
携帯電話ネットワークに接続されている20万台の車両のデータを取り込むための新しいアーキテクチャを設計するよう求められます。
Google のベストプラクティスに従ってください。
TerramEarthの技術的要件を考慮すると、データの取り込みにはどのコンポーネントを使用する必要がありますか。

A. SSL Ingress を使用したGoogle Kubernetes Engine。
B. 公開鍵 / 秘密鍵ペアを使用したGoogle Cloud IoT Core。
C. プロジェクト全体のSSH 認証鍵を備えたGoogle Compute Engine。
D. 特定のSSH 認証鍵を持つGoogle Compute Engine。

QUESTION 37
この質問については、Dress4Win のケーススタディを参照してください。
Dress4Winのセキュリティチームは、Google Cloud Platform（GCP）上の運用仮想マシン（VM）への外部 SSH アクセスを無効しました。
運用チームはVMをリモートで管理し、Docker コンテナのビルドとプッシュし、Google Cloud Storage オブジェクトの管理を行う必要があります。
セキュリティチームは、運用チームに何をするべきでしょうか？

A. 運用エンジニアにGoogle Cloud Shell へのアクセス権を付与します。
B. GCP へのVPN 接続を構成し、GCP のVMへのSSH アクセスを許可します。
C. 運用エンジニアがタスクを実行する必要がある場合に、GCP のVMへの一時的なSSH アクセスを許可する新しいアクセス要求プロセスを開発します。
D. 開発チームにAPI サービスを構築して、運用チームが特定のリモート プロシージャ コール（RPC）を実行してタスクを実行できるようにします。

QUESTION 38 ★
この質問については、Dress4Win のケーススタディを参照してください。Dress4Winでは、運用エンジニアが、データベースのバックアップ ファイルのコピーをリモートでアーカイブするための低コストのソリューションを作成しようとしています。
データベース ファイルは、現在のデータセンターに格納されている圧縮 tar ファイルです。
何をするべきでしょうか？

A. gsutil を使用してcron スクリプトを作成し、ファイルをColdline Storage バケットにコピーします。
B. gsutil を使用してcron スクリプトを作成し、ファイルをRegional Storage バケットにコピーします。
C. Google Cloud Storage Transfer Service ジョブを作成して、ファイルをColdline Storage バケットにコピーします。
D. Google Cloud Storage Transfer Service ジョブを作成して、ファイルをRegional Storage バケットにコピーします。

Explanation:
gsutil とGoogle Cloud Storage Transfer Serviceのどちらを使用するかを決定する際は、次のルールに従ってください。

オンプレミスのロケーションからデータを転送する場合は、gsutil を使用します。
別のクラウド ストレージ プロバイダからデータを転送する場合は、Google Cloud Storage Transfer Service を使用します。
それ以外の場合は、具体的な状況を勘案して両方のツールを評価してください。
このガイダンスをベースとして使用します。転送シナリオの詳細は、適切なツールを判断するときにも役立ちます。

Rerence:
– Storage Transfer Service の概要

QUESTION 39
この質問については、Dress4Win のケーススタディを参照してください。Dress4Winは、アプリケーション サーバで使用するマシンタイプの導入を検討しています。
何をするべきでしょうか？

A. オンプレミスの物理ハードウェア コアとRAMをパブリック クラウド内の最も近いマシンタイプにマッピングします。
B. Dress4Winには、CPUに対するRAMの比率が最も高いマシンタイプにアプリケーション サーバを導入することをお勧めします。
C. Dress4Winには、最小のインスタンスを使用して本番環境に導入し、時間をかけて監視し、目的のパフォーマンスに達するまでマシンタイプをスケールアップすることをお勧めします。
D. アプリケーション サーバの仮想マシンに関連付けられた仮想コアとRAMの数を特定し、パブリック クラウド内のカスタム マシンタイプに合わせてパフォーマンスを監視し、目的のパフォーマンスに達するまでマシンタイプをスケールアップします。

QUESTION 40
この質問については、Dress4Win のケーススタディを参照してください。
Dress4Winのパブリック クラウドへの移行計画の一環として、トラフィック負荷の急増に対処できるようにロギングとモニタリングの管理システムをセットアップしたいと考えています。
Dress4Winが希望する保証項目：

インフラストラクチャは、1日の使用量の増減を処理するためにスケールアップおよびスケールダウンが必要になったときの通知。
アプリケーションがエラー報告したときの管理者に自動通知。
集約されたログをフィルタリングして、多くのホストでアプリケーションの一部をデバッグ。
Google StackDriver のどの機能を使うべきか?

A. Logging、Alerts、Insights、Debug。
B. Monitoring, Trace, Debug, Logging。
C. Monitoring, Logging, Alerts, Error Reporting。
D. Monitoring, Logging, Debug, Error Report。

QUESTION 41
この質問については、Dress4Win のケーススタディを参照してください。
Dress4Winは、一部のアプリケーションをそのまま迅速に正常にデプロイすることにより、パブリック クラウドへのアプリケーションのデプロイに精通したいと考えています。
何を行えばよいでしょうか？

A. パブリック クラウドへの最初の移行として、外部に依存する自己完結型アプリケーションを特定します。
B. 内部的に依存しているエンタープライズアプリケーションを特定し、パブリック クラウドへの最初の移行します。
C. 社内データベースをパブリック クラウドに移行し、オンプレミス アプリケーションへのリクエストを継続的に処理します。
D. メッセージ キュー サーバをパブリック クラウドに移動し、オンプレミス アプリケーションへのリクエストの処理を続行します。

QUESTION 42
この質問については、Dress4Win のケーススタディを参照してください。
Dress4Winは、オンプレミスのMySQL 環境をパブリック クラウドに移行する方法についてアドバイスを求めています。
移行中の自社運用ソリューションへのダウンタイムとパフォーマンスの影響を最小限に抑えたいと考えています。
何をすれば良いでしょうか？

A. オンプレミス MySQL マスターサーバのダンプ（dump）ファイルを作成し、シャットダウンしてパブリック クラウド環境にアップロードし、新しいMySQL クラスタにロードします。
B. パブリック クラウド環境でMySQL レプリカサーバ/スレーブを設定し、カットオーバまでオンプレミスのMySQL マスターサーバから非同期レプリケーション用に構成します。
C. パブリック クラウドに新しいMySQL クラスタを作成し、オンプレミスとパブリック クラウドの両方のMySQL マスターへの書き込みを開始するようにアプリケーションを構成し、カットオーバー時に元のクラスタを破棄します。
D. MySQL レプリカサーバのダンプ ファイルをパブリック クラウド環境に作成してGoogle Cloud Datastore にロードし、カットオーバ時にGoogle Cloud Datastore に対して読み取り/書き込みを行うようにアプリケーションを構成します。

QUESTION 43
この質問については、Dress4Win のケーススタディを参照してください。
Dress4Winは、従来のサービスのいくつかについて、Google Stackdriver で新しい稼働時間チェックを設定しました。
Stackdriver ダッシュボードは、サービスが正常であると報告していません。
何をするべきでしょうか？

A. すべての従来のWebサーバにStackdriver エージェントをインストールします。
B. Google Cloud Platform Console で、アップタイムサーバのIP アドレスのリストをダウンロードし、インバウンド ファイアウォール ルールを作成します。
C. 値がGoogleStackdriverMonitoring-UptimeChecks と一致したときにUser-Agent HTTP ヘッダーを通過するようにロードバランサーを構成します。（https://cloud.google.com/monitoring）
D. 値がGoogleStackdriverMonitoringUptimeChecks と一致する場合、user-Agent HTTPヘッダーを含むリクエストを許可するように従来のWebサーバーを設定します。(https://cloud.google.com/monitoring)

QUESTION 44
この質問については、Dress4Win のケーススタディを参照してください。
新しいアプリケーション体験の一環として、Dress4Wmでは顧客が自分の画像をアップロードできます。
顧客は、これらのイメージを表示できるユーザーを独占的に管理できます。
顧客は、最小限の待ち時間で画像をアップロードでき、ログイン時にメイン アプリケーション ページに画像をすばやく表示できる必要があります。
どの構成を使用するべきでしょうか？

A. Google Cloud Storage バケットに画像ファイルを保存します。Google Cloud Datastore を使用して、各顧客のIDとその画像ファイルをマッピングするメタデータを維持します。
B. Google Cloud Storage バケットに画像ファイルを保存します。顧客の一意のIDを含むGoogle Cloud Storageのアップロードされた画像にカスタムメタデータを追加します。
C. 分散ファイルシステムを使用して、顧客の画像を保存します。ストレージのニーズが増えたときには、永続ディスクやノードを追加します。各ファイルの所有者属性を設定する一意のIDを各顧客に割り当て、画像のプライバシーを確保します。
D. 分散ファイルシステムを使用して、顧客の画像を保存します。ストレージのニーズが増えたときには、永続ディスクやノードを追加します。Google Cloud SQL データベースを使用して、各顧客のIDを画像ファイルにマッピングするメタデータを維持します。

QUESTION 45
この質問については、Dress4Win のケーススタディを参照してください。
Dress4Winには、エンドポイントの100％をカバーするエンドツーエンドのテストがあります。
パブリック クラウドへの移行によって新しいバグが発生しないようにしたいと考えています。
停止を防ぐために開発者はどのような追加のテスト方法を採用するべきですか？

A. アプリケーション コードでGoogle Stackdriver Debugger を有効にして、コード内のエラーを表示する必要があります。
B. パブリック クラウドのステージング環境にユニット（単体）テストと実稼働規模の負荷テストを追加する必要があります。
C. パブリック クラウドのステージング環境でエンドツーエンドのテストを実行して、コードが意図したとおりに機能しているかどうかを判断する必要があります。
D. カナリアテストを追加して、開発者が新しいリリースが遅延に与える影響を測定できるようにします。

QUESTION 46
この質問については、Dress4Win のケーススタディを参照してください。
Dress4Winの販売記録と税記録は、監査人が少なくとも10年間は見ることはありません。
最優先事項は、コストの最適化です。
どのGoogle プロダクトを選択するべきでしょうか？

A. データはGoogle Cloud Coldline Storage に保存し、gsutil でデータにアクセスします。
B. データはGoogle Cloud Nearline Storage に保存し、gsutil でデータにアクセスします。
C. データはアメリカまたはヨーロッパ リージョンを指定し、Google Bigtabte に保存し、gcloud でデータにアクセスします。
D.データはGoogle BigQuery に保存し、マネージド インスタンス グループ（MIG）内のWebサーバ クラスタでデータにアクセスします。Google Cloud SQL に、データを格納するために2つの異なるリージョンにミラーリングを行い、マネージド インスタンス グループ（MIG）内のRedis クラスタにミラーリングされたデータにアクセスします。

Reference:
– ストレージ クラス

QUESTION 47
この質問については、Dress4Win のケーススタディを参照してください。
現在のDress4winのシステム アーキテクチャは、1つのデータセンターに配置されているため、一部のお客様によってはレーテンシーが高くなることがあります。
パブリック クラウドでのパフォーマンスの将来の評価と最適化の時点で、Dresses4winは、Google Cloud Platform のシステムアーキテクチャを複数の場所に配布したいと考えています。
どのアプローチを採用するべきですか？

A. リージョン マネージド インスタンス グループとグローバル負荷分散を使用してパフォーマンスを向上させます。リージョン マネージド インスタンス グループは、トラフィックに基づいて各地域のインスタンスを個別に拡大できるためです。
B. 運用チームが管理する仮想マシンのより近いグループにリクエストを転送する仮想マシンのセットでグローバル負荷分散を使用します。
C.リージョン マネージド インスタンス グループとグローバル負荷分散を使用して、異なるリージョンのゾーン間で自動フェールオーバーを提供することにより、信頼性を向上させます。
D. 個別のマネージド インスタンス グループの一部として、リクエストをより近い仮想マシンのグループに転送する一連の仮想マシンでグローバル負荷分散を使用します。

Rerence:
– グローバル負荷分散によるアプリケーションの処理能力の改善
– リージョン マネージド インスタンス グループを使用したインスタンスの分散

QUESTION 48
この質問については、Dress4Win のケーススタディを参照してください。
Dress4Winは、既存の使用パターンを反映したデータとトラフィックの対応する成長とともに、1年でそのサイズの10倍に成長すると予想されます。
CIOは、今後6ヵ月以内に運用しているインフラストラクチャをパブリック クラウドに移行するという目標を設定しました。
アプリケーションに大きな変更することなく、この成長に合わせて拡張し、ROI を最大化するようにソリューションをどのように構成すれば良いでしょうか？

A. Web アプリケーション レイヤーをGoogle App Engine に、MySQL をGoogle Cloud Datastore に、NASをGoogle Cloud Storage に移行します。RabbitMQ をデプロイし、Google Cloud Deployment Manager を使ってHadoop サーバをデプロイします。
B. RabbitMQ をGoogle Cloud Pub/Subに、Hadoop をGoogle BigQueryに、NASをGoogle Compute Engine とPersistent Disk ストレージに移行します。Tomcat をデプロイして、Google Cloud Deployment Manager を使ってNginx をデプロイします。
C. Tomcat およびNginx 用のマネージド インスタンス グループを実装します。MySQL をGoogle Cloud SQL に、RabbitMQ をGoogle Cloud Pub/Sub に、Hadoop をGoogle Cloud Dataproc に、NAS をGoogle Compute Engine とPersistent Disk ストレージに移行します。
D. Tomcat およびNginx 用のマネージド インスタンス グループを実装します。MySQL をGoogle Cloud SQL に、RabbitMQ をGoogle Cloud Pub/Sub に、Hadoop をGoogle Cloud Dataproc に、NASをGoogle Cloud Storage に移行します。

QUESTION 49
この質問については、Dress4Win のケーススタディを参照してください。
特定のビジネス要件を考慮して、Webおよびトランザクション データレイヤーの導入をどのように自動化すれば良いでしょうか？

A. Google Cloud Deployment Manager を使用して、Nginx とTomcat をGoogle Compute Engine にデプロイします。 MySQL を置き換えるCloud SQL サーバをデプロイします。Google Cloud Deployment Manager を使用してJenkins を展開します。
B. Google Cloud Platform（GCP）Marketplace を使用してNginx とTomcat を展開します。GCP Marketplace を使用してMySQL サーバを展開します。Google Cloud Deployment Manager スクリプトを使用して、Jenkins をGoogle Compute Engine にデプロイします。
C. Nginx とTomcat をGoogle App Engine に移行します。Google Cloud Datastore サーバをデプロイして、高可用性構成のMySQL サーバを置き換えます。GCP Marketplace を使用してJenkins をGoogle Compute Engine にデプロイします。
D. Nginx とTomcat をGoogle App Engine に移行します。GCP Marketplace を使用してMySQL サーバを展開します。GCP Marketplace を使用してJenkins をGoogle Compute Engine にデプロイします。

QUESTION 50
この質問については、Dress4Win のケーススタディを参照してください。
どのコンピューティングサービスをそのまま移行を行うと、パブリック クラウドでのパフォーマンスのために最適化されたアーキテクチャになりますか？

A. Google App Engine スタンダード環境を使用して展開されたWebアプリケーション。
B.管理されていないインスタンス グループを使用して展開されたRabbitMQ。
C.高可用性モードでGoogle Cloud Dataproc Regional を使用して展開されたHadoop/Spark。
D.ジェンキンス、監視、要塞ホスト、カスタムマシンタイプに展開されたセキュリティスキャナーサービス。

QUESTION 51
この質問については、Dress4Win のケーススタディを参照してください。

監査中に法令に準拠するためには、Dress4WinはGoogle Cloud 上のリソース構成やメタデータを変更するすべての管理アクションを洞察できなければなりません。
何をするべきでしょうか？

A. Stackdriver Trace を使用して、トレースリスト分析を作成します。
B. Stackdriver Monitoring を使用して、プロジェクトのアクティビティに関するダッシュボードを作成します。
C. すべてのプロジェクトでCloud Identity-Aware Proxy を有効にし、管理者（Administrators）グループをメンバーとして追加します。
D. Google Cloud Platform Console のアクティビティページとStackdriver Logging を使用して、必要な洞察を提供します。

QUESTION 52 ★
この質問については、Dress4Win のケーススタディを参照してください。Dress4WinのGoogle Cloud Storage に保存されたデータのセキュリティに責任があります。
既にGoogle グループのセットを作成し、適切なユーザーをそれらのグループに割り当てています。
Google ベストプラクティスに従って、ビジネス要件と技術的要件を満たすために最も単純な設計を実装する必要があります。
何をするべきでしょうか？

A. セキュリティ要件を実施するために、作成したGoogl eグループにIAMのカスタムの役割を割り当てます。Google Cloud Storage にファイルを保存するときに、顧客が用意した暗号鍵でデータを暗号化します。
B. セキュリティ要件を実施するために、作成したGoogle グループにIAMのカスタムの役割を割り当てます。Google Cloud Storage にファイルを保存する前に、デフォルトのストレージ暗号化を有効します。
C. セキュリティ要件を実施するために、作成したGoogle グループに定義済みのIAMの役割を割り当てます。Google Cloud Storage にファイルを保存するときに、Google のデフォルトの暗号化を保存時に使用します。
D. セキュリティ要件を実施するために、作成したGoogle グループに定義済みのIAM の役割を割り当てます。Google Cloud Storage にファイルを保存する前に、デフォルトのGoogle Cloud KMS の暗号鍵が設定されていることを確認します。

QUESTION 53 ★
この質問については、Dress4Win のケーススタディを参照してください。
ソリューションを移行する前に、オンプレミス アーキテクチャがビジネス要件を満たしていることを確認する必要があります。
オンプレミスのアーキテクチャをどのように変更する必要がありますか？

A. RabbitMQ をGoogle Cloud Pub / Subに置き換えます。
B. MySQL をGoogle Cloud SQL for MySQL でサポートされているv5.7にダウングレードします。
C. 事前定義されたGoogle Compute Engine マシンタイプに一致するようにコンピューティング リソースのサイズを変更します。
D. マイクロサービスをコンテナ化し、Google Kubernetes Engine でホストします。